{{- range $k, $v := .Values.smartRollupNodes }}

apiVersion: v1
kind: Service
metadata:
  name: rollup-{{ $k }}
  namespace: {{ $.Release.Namespace }}
spec:
  clusterIP: None
  ports:
    - port: 8932
      name: rollup
  selector:
    app: rollup-{{ $k }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rollup-{{ $k }}
  namespace: {{ $.Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: 1
  serviceName: rollup-{{ $k }}
  selector:
    matchLabels:
      app: rollup-{{ $k }}
  template:
    metadata:
      labels:
        app: rollup-{{ $k }}
    spec:
      containers:
      - name: octez-smart-rollup-node
        image: "{{ $.Values.images.octez }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: web
        command:
          - /bin/sh
        volumeMounts:
        - mountPath: /var/tezos
          name: var-volume
        args:
          - "-c"
          - |
{{ tpl ($.Files.Get "scripts/smart-rollup-node.sh") $ | indent 12 }}
        env:
          - name: ROLLUP_ADDRESS
            value: {{ $v.rollup_address }}
          - name: OPERATOR_ACCOUNT
            value: {{ $v.operator_account }}
      initContainers:
      - image: {{ $.Values.tezos_k8s_images.utils }}
        imagePullPolicy: IfNotPresent
        name: config-generator
        args:
          - "config-generator"
        envFrom:
          - configMapRef:
              name: tezos-config
        env:
          - name: MY_POD_NAME
            value: {{ $k }}
          - name: MY_POD_TYPE
            value: {{ $.Values.smart_rollup_node_statefulset.pod_type }}
        volumeMounts:
          - mountPath: /var/tezos
            name: var-volume
          - mountPath: /etc/secret-volume
            name: tezos-accounts
      securityContext:
        fsGroup: 1000
      volumes:
        - emptyDir: {}
          name: var-volume
        - name: tezos-accounts
          secret:
            secretName: tezos-secret
---
{{- if $v.ingress | default false }}
{{- if $v.ingress.enabled | default false }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rollup-{{ $k }}
  namespace: {{ $.Release.Namespace }}
{{- with $v.ingress.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with $v.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
spec:
  ingressClassName: {{ $v.ingress.className }}
  {{- if $v.ingress.tls }}
  tls:
    {{- range $v.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    - host: {{ $v.ingress.host }}
      http:
        paths:
          - pathType: {{ $v.ingress.pathType }}
            path: /
            backend:
              service:
                name: rollup-{{ $k }}
                port:
                  number: 8932
{{- end }}
{{- end }}
{{- end }}
