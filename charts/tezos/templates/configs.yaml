apiVersion: v1
kind: ConfigMap
metadata:
  name: tezos-config
  namespace: {{ .Release.Namespace }}
data:
  CHAIN_NAME: "{{ .Values.node_config_network.chain_name }}"
  CHAIN_PARAMS: |
    {
      "bootstrap_peers": {{ toJson .Values.bootstrap_peers }},
      "default_bootstrap_mutez": "{{ .Values.bootstrap_mutez }}",
      "expected-proof-of-work": {{ toJson .Values.expected_proof_of_work }},

      "should_generate_unsafe_deterministic_data": {{ toJson .Values.should_generate_unsafe_deterministic_data }},
      "network": {{ mustToPrettyJson .Values.node_config_network | indent 8 | trim }},
      "protocol_activation": {{ .Values.activation | mustToPrettyJson | indent 8 | trim }}
    }
  FULL_SNAPSHOT_URL: "{{ .Values.full_snapshot_url }}"
  FULL_TARBALL_URL: "{{ .Values.full_tarball_url }}"
  ROLLING_SNAPSHOT_URL: "{{ .Values.rolling_snapshot_url }}"
  ROLLING_TARBALL_URL: "{{ .Values.rolling_tarball_url }}"
  ARCHIVE_TARBALL_URL: "{{ .Values.archive_tarball_url }}"
  PREFER_TARBALLS: "{{ .Values.prefer_tarballs }}"
  SNAPSHOT_METADATA_NETWORK_NAME: "{{ .Values.snapshot_metadata_network_name }}"
  SNAPSHOT_SOURCE: "{{ .Values.snapshot_source }}"
  OCTEZ_VERSION: "{{ .Values.images.octez }}"
  NODE_GLOBALS: |
{{ .Values.node_globals | mustToPrettyJson | indent 4 }}

  NODES: |
{{/*
  Don't add node classes without configuration to the configmap.
  Also remove the secret "identity" field on node instances. Creates
  a deep copy because "unset" modifies the object.
*/}}
{{- $nodes_copy := deepCopy .Values.nodes }}
{{- range $node_class, $node_config := $nodes_copy }}
  {{- if $node_config }}
    {{- range $_, $instance_config := $node_config.instances }}
      {{- $_ := unset $instance_config "identity" }}
    {{- end }}
  {{- else }}
    {{- $_ := unset $nodes_copy $node_class }}
  {{- end }}
{{- end }}
{{- $nodes_copy | mustToPrettyJson | indent 4 }}

  OCTEZ_SIGNERS: |
{{- $octezSigners := dict }}
{{- range $signerName, $signerConfig := .Values.octezSigners }}
    {{- $_ := set $signerConfig "name" $signerName }}
    {{- $podName := print $.Values.octez_signer_statefulset.name "-" (len $octezSigners) }}
    {{- $_ := set $octezSigners $podName $signerConfig }}
{{- end }}
{{ $octezSigners | default dict | mustToPrettyJson | indent 4 }}
  TACOINFRA_SIGNERS: |
{{- $tacoinfraSigners := dict }}
{{- range $signerName, $signerConfig := .Values.tacoinfraSigners }}
    {{- $_ := set $tacoinfraSigners $signerName (pick $signerConfig "accounts") }}
{{- end }}
{{ $tacoinfraSigners | default dict | mustToPrettyJson | indent 4 }}

---

apiVersion: v1
data:
  ACCOUNTS: |
{{- $accounts := dict }}
{{- range $k, $v := .Values.accounts }}
  {{- $_ := set $accounts $k (omit $v "type" ) }}
{{- end }}
{{ $accounts | toJson | b64enc | indent 4 }}
kind: Secret
metadata:
  name: tezos-secret
  namespace: {{ .Release.Namespace }}
---
{{- if (include "tezos.shouldDeployBakerConfig" .) }}
apiVersion: v1
data:
{{- $accountsBaking := include "tezos.getAccountsBaking" . | fromJson | values | first }}
{{- range $accountName := $accountsBaking }}
  {{- $account := get $.Values.accounts $accountName | default dict }}
  {{- if and
    (not $.Values.should_generate_unsafe_deterministic_data)
    (not $account)
   }}
    {{- fail (printf "Baking account '%s' is not defined." $account) }}
  {{- end }}

  {{- range ( $account.protocols | default $.Values.protocols ) }}
    {{ $accountName }}-{{ .command }}-per-block-votes.json: {{ .vote | toJson | quote }}
  {{- end }}
  {{- if $account.operations_pool }}
    {{ $accountName }}_operations_pool: {{ $account.operations_pool | quote }}
  {{- end }}
{{- end }}
kind: ConfigMap
metadata:
  name: baker-config
  namespace: {{ .Release.Namespace }}
---
{{- end }}
{{- include "tezos.getAuthorizedKeys" . }}
