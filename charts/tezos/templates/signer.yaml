{{- if (include "tezos.shouldDeploySignerStatefulset" .) }}
{{- range $key, $val := .Values.signers }}
{{- if $val }}
  {{- $_ := set $ "node_class" $key }}
  {{- $_ := set $ "node_vals" $val }}
  {{- $_ := set $ "node_identities" dict }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.node_class }}
  namespace: {{ $.Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ $.node_vals.instances | len }}
  serviceName: {{ $.node_class }}
  selector:
    matchLabels:
      node_class: {{ $.node_class }}
  template:
    metadata:
      labels:
        appType: tezos-signer
        node_class: {{ $.node_class }}
    spec:
      containers:
      - name: tezos-signer
        image: "tezos/tezos:v12-release"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6732
          name: signer
        command:
          - /bin/sh
        volumeMounts:
        - mountPath: /var/tezos
          name: var-volume
        args:
          - "-c"
          - |
{{ tpl ($.Files.Get "scripts/remote-signer.sh") $ | indent 12 }}
      initContainers:
        {{- include "tezos.init_container.config_generator"    $ | indent 8 }}
      securityContext:
        fsGroup: 100
      volumes:
        - emptyDir: {}
          name: var-volume
        - name: tezos-accounts
          secret:
            secretName: tezos-secret
      securityContext:
        fsGroup: 100
      volumes:
        - emptyDir: {}
          name: var-volume
        - name: tezos-accounts
          secret:
            secretName: tezos-secret
---
{{- end }}
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.signer_statefulset.name }}
  namespace: {{ .Release.Namespace }}
spec:
  clusterIP: None
  ports:
    - port: 6732
      name: signer
  selector:
    app: {{ .Values.signer_statefulset.name }}
---
{{- end }}
