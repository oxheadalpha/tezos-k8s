{{- define "tezos.tzkt.setDbConnectionEnvVar" -}}
{{ print " " "server=localhost;port=5432;database=$(POSTGRES_DB);username=$(POSTGRES_USER);password=$(POSTGRES_PASSWORD);" }}
{{- end -}}


{{- if (include "tezos.shouldDeployTzktIndexer" .) }}
{{- $tzkt_indexer := get (.Values.indexers | default dict) "tzkt" }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.tzkt_indexer_statefulset.name }}
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.tzkt_indexer_statefulset.name }}
  serviceName: ""
  template:
    metadata:
      labels:
        app: {{ .Values.tzkt_indexer_statefulset.name }}
    spec:
      initContainers:
      {{- if $tzkt_indexer.db_snapshot_url }}
        - image: {{ .Values.tezos_k8s_images.utils }}
          name: download-db-snapshot
          volumeMounts:
            - name: indexer-db
              mountPath: /etc/db-snapshot
              subPath: db-snapshot
            - name: indexer-db
              mountPath: /etc/indexer-db
              subPath: data
          env:
            - name: CHAIN_NAME
              value: {{ .Values.node_config_network.chain_name }}
            - name: SNAPSHOT_URL
              value: {{ .Values.indexers.tzkt.db_snapshot_url }}
          command:
            - /bin/sh
          args:
          - "-c"
          - |
            set -ex

            if [ ! -d "/etc/indexer-db/pgdata" ]; then
              echo "Downloading $CHAIN_NAME db snapshot from $SNAPSHOT_URL ..."
              curl -LSsf -o "/etc/db-snapshot/$CHAIN_NAME.backup" $SNAPSHOT_URL
              echo "Successfully downloaded snapshot"
            else
              echo "Database '{{ $tzkt_indexer.config.db_name }}' already exists. Skipping download."
            fi
      {{- end }}
        - image: {{ .Values.images.tezos }}
          name: get-chain-id
          volumeMounts:
            - name: tzkt-env
              mountPath: /tzkt
          command:
            - /bin/sh
          args:
            - "-c"
            - |
              ENV_FILE="/tzkt/tzkt.env"
              touch "$ENV_FILE"

              # Get the chain id
              CLIENT="/usr/local/bin/tezos-client -E {{ $tzkt_indexer.config.rpc_url }}"
              until $CLIENT rpc get /version; do sleep 2; done
              CHAIN_ID=$($CLIENT rpc get /chains/main/chain_id)
              echo "Got chain id: $CHAIN_ID"
              echo "export TZKT_TezosNode__ChainId=$CHAIN_ID" >> "$ENV_FILE"
      containers:
        - image: bakingbad/tzkt-api:1.5
          name: api
          ports:
            - containerPort: 5000
          env:
          - name: Logging__LogLevel__Default
            value: {{ $tzkt_indexer.config.api_log_level }}
          - name: ConnectionStrings__DefaultConnection
            value: {{- include "tezos.tzkt.setDbConnectionEnvVar" . }}
          envFrom:
          - secretRef:
              name: db-creds
        - image: bakingbad/tzkt-sync:1.5
          name: indexer
          volumeMounts:
            - name: tzkt-env
              mountPath: /app/data
          env:
          - name: TZKT_TezosNode__Endpoint
            value: {{ $tzkt_indexer.config.rpc_url }}
          - name: TZKT_Logging__LogLevel__Default
            value: {{ $tzkt_indexer.config.indexer_log_level }}
          - name: TZKT_ConnectionStrings__DefaultConnection
            value: {{- include "tezos.tzkt.setDbConnectionEnvVar" . }}
          envFrom:
          - secretRef:
              name: db-creds
          command:
            - /bin/bash
          args:
            - "-c"
            - |
              # Set TZKT_TezosNode__ChainId env var
              . /app/data/tzkt.env
              dotnet Tzkt.Sync.dll
        - image: postgres:13
          name: db
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: indexer-db
              mountPath: /var/lib/postgresql/data
              subPath: data
            {{- if $tzkt_indexer.db_snapshot_url }}
            - name: indexer-db
              mountPath: /etc/db-snapshot
              subPath: db-snapshot
            - name: import-db-script
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
          env:
          {{- /* https://github.com/docker-library/docs/blob/master/postgres/README.md#pgdata */}}
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          envFrom:
          - secretRef:
              name: db-creds
      volumes:
        - name: tzkt-env
          emptyDir: {}
        {{- if $tzkt_indexer.db_snapshot_url }}
        - name: import-db-script
          configMap:
            name: import-db-script
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: indexer-db
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.tzkt_indexer_statefulset.storageClassName }}
        resources:
          requests:
            storage: "50Gi"
---
apiVersion: v1
kind: Secret
metadata:
  name: db-creds
data:
  POSTGRES_USER: {{ b64enc $tzkt_indexer.config.db_user }}
  POSTGRES_PASSWORD: {{ b64enc $tzkt_indexer.config.db_password }}
  POSTGRES_DB: {{ b64enc $tzkt_indexer.config.db_name }}

{{- if $tzkt_indexer.db_snapshot_url }}
---
{{/*
This script is mounted into postgres's /docker-entrypoint-initdb.d directory
where it is run on db initialization.
*/}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: import-db-script
  namespace: {{ .Release.Namespace }}
data:
  import-db-snapshot.sh: |
    #!/bin/bash

    SNAPSHOT_FILE="/etc/db-snapshot/{{ .Values.node_config_network.chain_name }}.backup"

    pg_restore -U "$POSTGRES_USER" -v \
    --no-owner --clean --if-exists \
    --dbname "$POSTGRES_DB" \
    -1 "$SNAPSHOT_FILE"

    rm -fv "$SNAPSHOT_FILE"
{{- end }}

{{- end }}
