{{- range $key, $val := .Values.nodes }}
{{- if $val }}
  {{- $_ := set $ "node_class" $key }}
  {{- $_ := set $ "node_vals" $val }}
  {{- $_ := set $ "node_identities" dict }}

  {{- include "tezos.includeNodeIdentitySecret" $ }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.node_class }}
  namespace: {{ $.Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ $.node_vals.instances | len }}
  serviceName: {{ $.node_class }}
  selector:
    matchLabels:
      node_class: {{ $.node_class }}
  template:
    metadata:
      labels:
        appType: tezos-node
        node_class: {{ $.node_class }}
      {{- if has "baker" $.node_vals.runs }}
        baking_node: "true"
      {{- end }}
      {{- if $.node_vals.labels }}
        {{- $.node_vals.labels | toYaml | nindent 8 }}
      {{- end }}
    spec:
      containers:
        {{- include "tezos.container.node"      $ | indent 8 }}
        {{- include "tezos.container.tezedge"   $ | indent 8 }}
        {{- include "tezos.container.accusers"  $ | indent 8 }}
        {{- include "tezos.container.bakers"    $ | indent 8 }}
        {{- include "tezos.container.logger"    $ | indent 8 }}
        {{- include "tezos.container.metrics"   $ | indent 8 }}
        {{- include "tezos.container.zerotier"  $ | indent 8 }}
        {{- include "tezos.container.sidecar"   $ | indent 8 }}
      initContainers:
        {{- include "tezos.init_container.config_init"         $ | indent 8 }}
        {{- include "tezos.init_container.zerotier"            $ | indent 8 }}
        {{- include "tezos.init_container.config_generator"    $ | indent 8 }}
        {{- include "tezos.init_container.snapshot_downloader" $ | indent 8 }}
        {{- include "tezos.init_container.snapshot_importer"   $ | indent 8 }}
        {{- include "tezos.init_container.wait_for_dns"        $ | indent 8 }}
      securityContext:
        fsGroup: 100
{{- include "tezos.nodeSelectorConfig" $ | indent 6 }}
      volumes:
        - hostPath:
            path: /dev/net/tun
          name: dev-net-tun
        - emptyDir: {}
          name: config-volume
{{- if $.node_vals.local_storage | default false }}
        - emptyDir: {}
          name: var-volume
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: var-volume
        namespace: {{ $.Release.Namespace }}
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if $.node_vals.storageClassName }}
        storageClassName: {{ $.node_vals.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ default "15Gi" $.node_vals.storage_size }}
{{- end }}
---
{{- end }}
{{- end }}
