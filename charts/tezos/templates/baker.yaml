{{- if (include "tezos.shouldActivateProtocol" .) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: activate-job
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      name: activate-job
    spec:
      containers:
        - command:
            - sh
            - "-c"
            - "echo \"private chain activated\""
          image: busybox
          name: job-done
          imagePullPolicy: IfNotPresent
      initContainers:
        - image: {{ .Values.tezos_k8s_images.config_generator }}
          imagePullPolicy: IfNotPresent
          name: config-generator
          args:
            - "--generate-parameters-json"
          envFrom:
            - secretRef:
                name: tezos-secret
            - configMapRef:
                name: tezos-config
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - mountPath: /etc/tezos
              name: config-volume
            - mountPath: /var/tezos
              name: var-volume
        - image: "{{ .Values.tezos_k8s_images.chain_initiator }}"
          imagePullPolicy: IfNotPresent
          name: chain-initiator
          volumeMounts:
            - mountPath: /etc/tezos
              name: config-volume
            - mountPath: /var/tezos
              name: var-volume
          envFrom:
            - configMapRef:
                name: tezos-config
      restartPolicy: Never
      volumes:
        - emptyDir: {}
          name: config-volume
        - emptyDir: {}
          name: var-volume
{{ end }}
---
{{- if (include "tezos.shouldDeployBakerStatefulset" .) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.baker_statefulset.name }}
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.nodes.baking | len }}
  serviceName: {{ .Values.baker_statefulset.name }}
  selector:
    matchLabels:
      app: {{ .Values.baker_statefulset.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.baker_statefulset.name }}
        appType: tezos-node
    spec:
      containers:
{{- include "tezos.container.node"     . | indent 8 }}
{{- include "tezos.container.baker"    . | indent 8 }}
{{- include "tezos.container.endorser" . | indent 8 }}
{{- include "tezos.container.zerotier" . | indent 8 }}
      initContainers:
{{- include "tezos.init_container.wait_for_bootstrap"  . | indent 8 }}
{{- include "tezos.init_container.zerotier"            . | indent 8 }}
{{- include "tezos.init_container.config_generator"    . | indent 8 }}
{{- include "tezos.init_container.snapshot_downloader" . | indent 8 }}
      securityContext:
        fsGroup: 100
      volumes:
        - hostPath:
            path: /dev/net/tun
          name: dev-net-tun
        - emptyDir: {}
          name: config-volume
  volumeClaimTemplates:
    - metadata:
        name: var-volume
        namespace: {{ .Release.Namespace }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.baker_statefulset.storage_size }}
{{- end }}
