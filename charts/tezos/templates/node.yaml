apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tezos-node
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.nodes.regular | len }}
  selector:
    matchLabels:
      app: tezos-node
  serviceName: tezos-node
  template:
    metadata:
      labels:
        app: tezos-node
        appType: tezos
    spec:
      containers:
        - args:
            - run
            - "--config-file"
            - /etc/tezos/config.json
          command:
            - /usr/local/bin/tezos-node
          image: {{ .Values.images.tezos | quote }}
          imagePullPolicy: IfNotPresent
          name: tezos-node
          ports:
            - containerPort: 8732
              name: tezos-rpc
            - containerPort: 9732
              name: tezos-p2p
          volumeMounts:
            - mountPath: /etc/tezos
              name: config-volume
            - mountPath: /var/tezos
              name: var-volume
{{- if .Values.zerotier_in_use }}
        - args:
            - "-c"
            - "echo 'starting zerotier' && zerotier-one /var/tezos/zerotier"
            - "-P"
            - '8732'
            - "-d"
            - /var/tezos/client
            - run
            - baker
          command:
            - sh
          image: "{{ .Values.tezos_k8s_images.zerotier }}"
          imagePullPolicy: IfNotPresent
          name: zerotier
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_ADMIN
            privileged: true
          volumeMounts:
            - mountPath: /var/tezos
              name: var-volume
{{- end }}
      initContainers:
{{- if .Values.zerotier_in_use }}
        - envFrom:
            - configMapRef:
                name: zerotier-config
          image: "{{ .Values.tezos_k8s_images.zerotier }}"
          imagePullPolicy: IfNotPresent
          name: get-zerotier-ip
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_ADMIN
            privileged: true
          volumeMounts:
            - mountPath: /var/tezos
              name: var-volume
            - mountPath: /dev/net/tun
              name: dev-net-tun
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
{{- end }}
        - image: {{ .Values.tezos_k8s_images.key_importer }}
          name: key-importer
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: tezos-secret
            - configMapRef:
                name: tezos-config
          volumeMounts:
            - mountPath: /var/tezos
              name: var-volume
        - image: {{ .Values.tezos_k8s_images.config_generator }}
          imagePullPolicy: IfNotPresent
          name: config-generator
          args:
            - "--generate-config-json"
          envFrom:
            - configMapRef:
                name: tezos-config
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - mountPath: /etc/tezos
              name: config-volume
            - mountPath: /var/tezos
              name: var-volume
        - args:
            - "-c"
            - "[ -f /var/tezos/node/identity.json ] || (mkdir -p /var/tezos/node && /usr/local/bin/tezos-node identity generate 0 --data-dir /var/tezos/node --config-file /etc/tezos/config.json)"
          command:
            - /bin/sh
          image: {{ .Values.images.tezos | quote }}
          name: identity-job
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /etc/tezos
              name: config-volume
            - mountPath: /var/tezos
              name: var-volume
        - image: {{ .Values.tezos_k8s_images.wait_for_bootstrap }}
          imagePullPolicy: IfNotPresent
          name: wait-for-bootstrap
          volumeMounts:
            - mountPath: /var/tezos
              name: var-volume
      securityContext:
        fsGroup: 100
      volumes:
        - hostPath:
            path: /dev/net/tun
          name: dev-net-tun
        - emptyDir: {}
          name: config-volume
  volumeClaimTemplates:
    - metadata:
        name: var-volume
        namespace: {{ .Release.Namespace }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "15Gi"
