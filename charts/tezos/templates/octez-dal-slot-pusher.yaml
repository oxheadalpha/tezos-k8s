{{- if .Values.dal_deploy_slot_injector | default false }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: commit-script-configmap
data:
  slot_injector.sh: |
    #!/bin/sh

    slot_id="0"
    echo "Starting slot injector"
    sudo apk add curl

    if ! [ "$1" = "" ]; then
        slot_id=$1
    fi

    echo slot id is $slot_id

    acc=100000000000
    DAL_NODE="dal-node-0"
    L1_NODE="l1-node-0.l1-node"

    TEZ_VAR=/var/tezos
    TEZ_BIN=/usr/local/bin
    CLIENT_DIR="$TEZ_VAR/client"
    ln -s /var/tezos/client /home/tezos/.tezos-client
    while true; do

        acc=$(($acc + 1))

        echo '"' > data-$slot_id.txt
        echo $acc >> data-$slot_id.txt
        slot_size=65536
        size=$(($slot_size - 6))
        for i in `seq 1 $size`; do printf "00"; done >> data-$slot_id.txt

        echo '"' >> data-$slot_id.txt

        echo "new data generated"

        commitment=`curl -s -X POST http://$DAL_NODE:10732/commitments -H 'Content-Type: application/json' --data "@data-$slot_id.txt"`
        commitment=`echo $commitment | cut -d'"' -f2`
        echo commitment is $commitment

        curl -s -X PUT http://$DAL_NODE:10732/commitments/$commitment/shards -H 'Content-Type: application/json' --data '{"with_proof": true}'

        echo "shards stored"

        proof=`curl -s -X GET http://$DAL_NODE:10732/commitments/$commitment/proof`
        proof=`echo $proof | cut -d '"' -f2`

        echo proof is $proof

        octez-client -E http://${L1_NODE}:8732 --wait 1  publish dal commitment $commitment from baker-a for slot $slot_id with proof $proof

        echo "\n================="

        sleep 3
        curl -s http://${L1_NODE}:8732/chains/main/mempool/monitor_operations -o /dev/null

    done
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: slot-injector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slot-injector
  template:
    metadata:
      labels:
        app: slot-injector
    spec:
      containers:
      - name: octez-smart-rollup-node
        image: "{{ .Values.images.octez }}"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: script-volume
          mountPath: /scripts
        - mountPath: /var/tezos
          name: var-volume
        command: ["/bin/sh", "/scripts/slot_injector.sh"]
      initContainers:
      - image: {{ .Values.tezos_k8s_images.utils }}
        imagePullPolicy: IfNotPresent
        name: config-generator
        args:
          - "config-generator"
        envFrom:
          - configMapRef:
              name: tezos-config
        env:
          - name: MY_POD_NAME
            value: slot-injector
          - name: MY_POD_TYPE
            value: activating
        volumeMounts:
          - mountPath: /var/tezos
            name: var-volume
          - mountPath: /etc/secret-volume
            name: tezos-accounts
      securityContext:
        fsGroup: 1000
      volumes:
        - name: tezos-accounts
          secret:
            secretName: tezos-secret
        - name: script-volume
          configMap:
            name: commit-script-configmap
  volumeClaimTemplates:
    - metadata:
        name: var-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "15Gi"
---
{{- end }}
