tezos_k8s_images:
  snapshotEngine: tezos-k8s-snapshotengine:dev

# the tezos version used to run `tezos-node snapshot import/export`
images:
  octez: tezos/tezos:v13-release

# snapshotEngine containers interact with the kubernetes control
# plane to create volume snapshots. This requires a special IAM role
# so k8s can create the snapshots and volumes in the cloud.
# Specify this role below.
iam_role_arn: ""
service_account: snapshot-engine-sa

# snapshotEngine chart does not run tezos nodes.
# It searches for separately defined tezos nodes and targets them
# by taking CSI volumeSnapshots of their volume, then restoring them
# into new pvcs and running jobs against them.
# Note that these tezos nodes should be in the same namespace.
# Specify an archive node to generate archive tarballs, a rolling node
# to generate rolling snapshots and tarballs, or both to generate all
# artifacts.
# Below, specify what volumes the snapshot engine should look for, in
# the following format:
# nodes:
#   <NODE_CLASS>:
#     history_mode: <HISTORY_MODE>
#     target_volume: <TARGET_VOLUME>
# where:
# NODE_CLASS is the node class as defined in tezos-k8s "tezos" chart.
# HISTORY_MODE is archive or rolling
# TARGET_VOLUME is the name of the pod's volume containing tezos data dir.
#
# The default configuration below will be looking for tezos nodes defined in the 
# tezos chart with class names `snapshot-archive-node` and `snapshot-rolling-node`. 
# If you'd like to name them differently, make sure to match the names in both the 
# tezos chart and here in the snapshot engine chart. 
# Also, the tezos-k8s chart names the node data volume 'var-volume' by default.
nodes:
  snapshot-archive-node:
    history_mode: archive
    target_volume: var-volume
  snapshot-rolling-node:
    history_mode: rolling
    target_volume: var-volume

# snapshot website domain name
# Example:
# snapshotWebsiteDomainName: xtz-shots.io
snapshotWebsiteDomainName: ""

# snapshotEngine generates static webpages to accompany the generated
# artifacts. They are rendered by jekyll.
# See an example jekyll template at:
#   https://github.com/oxheadalpha/xtz-shots-website/
# 3 parameters need to be passed:
# * jekyllRemoteThemeRepository: the github repository, in format organization/reponame
# * snapshotMarkdownTemplate: the URL for the source markdown file template
#   to render for every individual artifact.
#   It will be rendered based on metadata generated by the snapshot engine.
# * jekyllConfig: the jekyll _config.yml to be used
#
# Example:
# jekyllRemoteThemeRepository: oxheadalpha/xtz-shots-website
# snapshotMarkdownTemplate: https://raw.githubusercontent.com/oxheadalpha/xtz-shots-website/master/snapshot.md
# jekyllConfig: https://raw.githubusercontent.com/oxheadalpha/xtz-shots-website/master/_config.yml
jekyllRemoteThemeRepository: ""
snapshotMarkdownTemplate: ""
jekyllConfig: ""

# When setting up the CSI driver in Kubernetes to create a snapshottable storage class
# you will have also created and named a volumeSnapshotClass that will be used in this value.
# This value is used during the snapshot creation process.
volumeSnapClass: ""

# The EBS snapshot of a node is restored to a new volume as a part of the artifact generation process.  
# This storage must have a tezos node "turned on" to initialize the storage for proper restoration later. 
# However, there are errors that occur during this initialization due to Tezos not being tolerant 
# of the KILL -9 that occurs during the EBS snapshot process.  
# Tezos also does not exit on error, but rather just hangs stdout on a random error. 
# Therefore we limit this initialization process and pitch the job in a reasonable amount of time to account for these
# random errors. It may be necessary to increase this time for different changes, or as a particular chain
# grows in size over time.
# This time format is in unix sleep time format ex. 1s, 2m, 3h, 4d.
restoredStorageInitTime: 2m

# We also provide the ability to disable the time limit for debugging purposes.
disableStorageInitTime: "false"

# Used to start the snapshotable node, and for the initialization network on the restored snapshot.
# Can be useful if namespace does not begin with network name.
# Optional, defaults to beginning word of namespace before "-shots" ex "mainnet-shots" = "mainnet"
network: ""